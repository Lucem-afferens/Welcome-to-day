<?php
// –¢–æ–ª—å–∫–æ POST-–∑–∞–ø—Ä–æ—Å—ã
if ($_SERVER['REQUEST_METHOD'] !== 'POST') {
    http_response_code(405);
    exit('Method Not Allowed');
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—à–∏–±–æ–∫ (—Ç–æ–ª—å–∫–æ –Ω–∞ –≤—Ä–µ–º—è –æ—Ç–ª–∞–¥–∫–∏)
ini_set('display_errors', 1);
ini_set('display_startup_errors', 1);
error_reporting(E_ALL);

header('Content-Type: application/json');

// –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ñ–æ—Ä–º—ã –∏ –∑–∞—â–∏—Ç–∞
$fullname = htmlspecialchars(trim($_POST['fullname'] ?? ''));
$phone = htmlspecialchars(trim($_POST['phone'] ?? ''));
$telegram = htmlspecialchars(trim($_POST['telegram'] ?? ''));
$email = htmlspecialchars(trim($_POST['email'] ?? ''));
$productName = htmlspecialchars(trim($_POST['productName'] ?? ''));

$success = true;
$errors = [];

// === –í–∞–ª–∏–¥–∞—Ü–∏—è ===
if (empty($fullname)  empty($phone)  empty($email)) {
    $success = false;
    $errors[] = "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è.";
}

if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
    $success = false;
    $errors[] = "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email.";
}

if (!preg_match('/^\d{10,15}$/', $phone)) {
    $success = false;
    $errors[] = "–¢–µ–ª–µ—Ñ–æ–Ω –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã (10‚Äì15 —Å–∏–º–≤–æ–ª–æ–≤).";
}

// –§—É–Ω–∫—Ü–∏—è —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è Markdown —Å–ø–µ—Ü—Å–∏–º–≤–æ–ª–æ–≤
function escapeMarkdown($text) {
    $search = ['\\', '_', '*', '[', ']', '(', ')', '~', '`', '>', '#', '+', '-', '=', '|', '{', '}', '.', '!'];
    $replace = array_map(fn($char) => '\\' . $char, $search);
    return str_replace($search, $replace, $text);
}

// === –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Telegram ===
if ($success) {
    $telegramToken = "8469386738:AAEZqVpy0g-TVR8YFhJtZT8z3jWDVlNe3Ws";
    $chatId = "1847244710";

    $telegramMessage = "üíå *–ó–∞–ø—Ä–æ—Å –æ—Ç Welcome-to-day*\n\n";
    $telegramMessage .= "*–ò–º—è:* " . escapeMarkdown($fullname) . "\n";
    $telegramMessage .= "*–¢–µ–ª–µ—Ñ–æ–Ω:* " . escapeMarkdown($phone) . "\n";
    $telegramMessage .= "*–¢–µ–ª–µ–≥—Ä–∞–º:* " . escapeMarkdown($telegram) . "\n";
    $telegramMessage .= "*–ü–æ—á—Ç–∞:* " . escapeMarkdown($email) . "\n";
    $telegramMessage .= "*–®–∞–±–ª–æ–Ω:* " . escapeMarkdown($productName);

    // –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ POST-–∑–∞–ø—Ä–æ—Å–∞ CURL
    function telegramSendMessage($token, $chatId, $message) {
        $url = "https://api.telegram.org/bot$token/sendMessage";

        $data = [
            'chat_id' => $chatId,
            'text' => $message,
            'parse_mode' => 'Markdown'
        ];

        $ch = curl_init();
        curl_setopt($ch, CURLOPT_URL, $url);
        curl_setopt($ch, CURLOPT_POST, true);
        curl_setopt($ch, CURLOPT_POSTFIELDS, http_build_query($data));
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
        $response = curl_exec($ch);

        if ($response === false) {
            $error = curl_error($ch);
            curl_close($ch);
            return ['ok' => false, 'description' => $error];
        }

        curl_close($ch);
        return json_decode($response, true);
    }

    $responseData = telegramSendMessage($telegramToken, $chatId, $telegramMessage);

    if (!$responseData['ok']) {
        $success = false;
        $errors[] = "Telegram –æ—à–∏–±–∫–∞: " . ($responseData['description'] ?? '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞');
    }
}

// === –û—Ç–≤–µ—Ç –¥–ª—è JS
echo json_encode([
    'success' => $success,
    'message' => $success ? '–°–ø–∞—Å–∏–±–æ! –í–∞—à –æ—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω!' : implode(" ", $errors)
]);
exit;